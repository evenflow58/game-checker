name: Ephemeral Environment

on:
  push:
    branches-ignore:
      - "main"
      - "master"
  pull_request:
    types: [closed]   # teardown when PR closes

jobs:
  ephemeral-env:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set env vars
        run: |
          echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "STACK_NAME=ephemeral-${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create/Update stack
        if: github.event_name == 'push'
        run: |
          PREFIX=$(echo "$GITHUB_REPOSITORY" | sed -E 's/[^a-zA-Z0-9]+/ /g' | awk '{for(i=1;i<=NF;i++) printf("%s", substr($i,1,1));}')
          aws cloudformation deploy \
            --template-file infrastructure/pipeline/template.yaml \
            --stack-name $STACK_NAME \
            --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND \
            --parameter-overrides \
              GitHubBranch=$BRANCH_NAME \
              GitHubRepo=$GITHUB_REPOSITORY \
              Prefix=$PREFIX

      - name: Trigger pipeline
        if: github.event_name == 'push'
        run: |
          PIPELINE_NAME="ephemeral-${BRANCH_NAME}-pipeline"
          aws codepipeline start-pipeline-execution --name $PIPELINE_NAME

      - name: Delete stack (teardown)
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        run: |
          aws cloudformation delete-stack --stack-name $STACK_NAME

      - name: Debug CFN failure
        if: failure()
        run: |
          aws cloudformation describe-stack-events --stack-name $STACK_NAME --max-items 10
