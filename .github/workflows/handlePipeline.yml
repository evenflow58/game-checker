name: Ephemeral Environment

on:
  push:
    branches-ignore:
      - "main"
      - "master"
  pull_request:
    types: [closed]  # teardown when PR closes

jobs:
  ephemeral-env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set env vars
        run: |
          echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "STACK_NAME=ephemeral-${GITHUB_REF_NAME}" >> $GITHUB_ENV
          PREFIX=$(echo "$GITHUB_REPOSITORY" | sed -E 's/[^a-zA-Z0-9]+/ /g' | \
                   awk '{for(i=1;i<=NF;i++) printf("%s", substr($i,1,1));}')
          echo "PREFIX=$PREFIX" >> $GITHUB_ENV

      - name: Validate CloudFormation template
        run: |
          aws cloudformation validate-template \
            --template-body file://infrastructure/pipeline/template.yaml

      - name: Install SAM
        uses: aws-actions/setup-sam@v2

      - name: Deploy CloudFormation stack
        if: github.event_name == 'push'
        run: |
          echo "$STACK_NAME"

          sam build -t ./infrastructure/pipeline/template.yaml

          sam deploy \
            --region us-east-1 \
            --resolve-s3 \
            --s3-prefix game-checker-pipeline \
            --stack-name "$STACK_NAME" \
            --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND \
            --no-confirm-changeset \
            --parameter-overrides \
                ParameterKey=GitHubBranch,ParameterValue=$BRANCH_NAME \
                ParameterKey=GitHubRepo,ParameterValue=$GITHUB_REPOSITORY \
                ParameterKey=Prefix,ParameterValue=$PREFIX

      - name: Delete stack (teardown)
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        run: |
          aws cloudformation delete-stack --stack-name $STACK_NAME
          aws cloudformation wait stack-delete-complete --stack-name $STACK_NAME
